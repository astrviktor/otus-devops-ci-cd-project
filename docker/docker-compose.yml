version: '3'
services:

  mongodb:
    image: mongo:3.2
    container_name: mongodb
    volumes:
      - volume_search_engine_mongodb:/data/db
    networks:
      docker:
        ipv4_address: 10.5.0.2
        aliases:
          - mongodb

  rabbitmq:
    image: rabbitmq:3.9.21-alpine
    container_name: rabbitmq
    volumes:
      - volume_search_engine_rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      docker:
        ipv4_address: 10.5.0.3
        aliases:
          - rabbitmq

  search_engine_ui:
    build:
      context: ./search_engine_ui
    container_name: search_engine_ui
    environment:
      - MONGO=mongodb
      - MONGO_PORT=27017
    ports:
      - 80:8000
    restart: on-failure
    networks:
      docker:
        ipv4_address: 10.5.0.4
        aliases:
          - search_engine_ui
    depends_on:
      - mongodb

  search_engine_crawler:
    build:
      context: ./search_engine_crawler
    container_name: search_engine_crawler
    environment:
      - MONGO=mongodb
      - MONGO_PORT=27017
      - RMQ_HOST=rabbitmq
      - RMQ_QUEUE=queue
      - RMQ_USERNAME=${RABBITMQ_USER}
      - RMQ_PASSWORD=${RABBITMQ_PASS}
      - EXCLUDE_URLS=${EXCLUDE_URLS}
      - URL=${URL}
    ports:
      - 8001:8000
    restart: on-failure
    networks:
      docker:
        ipv4_address: 10.5.0.5
        aliases:
          - search_engine_crawler
    depends_on:
      - mongodb
      - rabbitmq

volumes:
  volume_search_engine_mongodb:
  volume_search_engine_rabbitmq:

networks:
  docker:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16

