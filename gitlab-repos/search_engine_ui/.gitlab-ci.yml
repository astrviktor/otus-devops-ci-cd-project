
stages:
  - testing
  - build
  - deploy:stage
  - deploy:prod


test:
  stage: testing
  image: python:3.6-alpine
  script:
    - pip install -r requirements.txt -r requirements-test.txt
    - python -m unittest discover -s tests/ 


report:
  stage: testing
  image: python:3.6-alpine
  script:
    - pip install -r requirements.txt -r requirements-test.txt
    - coverage run -m unittest discover -s tests/ 
    - coverage report --include ui/ui.py


build:
  stage: build
  image: docker:20.10.16 
  when: manual
  services:
    - docker:20.10.16-dind 
  before_script:
    - echo -n $DOCKER_REGISTRY_PASS | docker login $DOCKER_REGISTRY --username $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker build -t $DOCKER_REGISTRY_USER/search_engine_ui:$CI_PIPELINE_ID .
    - docker images
    - docker push $DOCKER_REGISTRY_USER/search_engine_ui:$CI_PIPELINE_ID


deploy_stage:
  stage: deploy:stage
  image: alpine/k8s:1.25.3
  when: manual
  before_script:
    - export KUBECONFIG=$KUBECONFIG
  script:
    - sed -i -e "s,<IMAGE>,$DOCKER_REGISTRY_USER/search_engine_ui:$CI_PIPELINE_ID,g" ./deploy/stage/search-engine-ui-deployment.yml
    - kubectl apply -n stage -f ./deploy/stage/

deploy_prod:
  stage: deploy:prod
  image: alpine/k8s:1.25.3
  when: manual
  before_script:
    - export KUBECONFIG=$KUBECONFIG
  script:
    - sed -i -e "s,<IMAGE>,$DOCKER_REGISTRY_USER/search_engine_ui:$CI_PIPELINE_ID,g" ./deploy/prod/search-engine-ui-deployment.yml    
    - kubectl apply -n prod -f ./deploy/prod/
  only:
    refs:
      - tags
